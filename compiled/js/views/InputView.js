// Generated by CoffeeScript 1.10.0
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.InputView = (function(superClass) {
    extend(InputView, superClass);

    function InputView() {
      return InputView.__super__.constructor.apply(this, arguments);
    }

    InputView.prototype.tagName = 'input';

    InputView.prototype.events = {
      'keydown': 'keyAction'
    };

    InputView.prototype.initialize = function() {
      return this.render();
    };

    InputView.prototype.render = function() {
      this.resetInput();
      return this;
    };

    InputView.prototype.keyAction = function(e) {
      var isEnterKey;
      isEnterKey = e.which === 13;
      if (isEnterKey && !this.$el.val().trim().match(/^(?=.*[0-9].*)[0-9]{5}$/)) {
        this.$el.attr({
          "placeholder": "Sorry, zip code invalid."
        });
        this.clearInput();
        return this;
      } else if (isEnterKey) {
        this.collection.addWeatherEntry(this.$el.val());
        this.resetInput();
        return this;
      }
    };

    InputView.prototype.resetInput = function() {
      this.$el.attr({
        "placeholder": "Enter a zip code"
      });
      return this.clearInput();
    };

    InputView.prototype.clearInput = function() {
      console.log("trying to clear");
      return this.$el.val('');
    };

    return InputView;

  })(Backbone.View);

}).call(this);

//# sourceMappingURL=InputView.js.map
